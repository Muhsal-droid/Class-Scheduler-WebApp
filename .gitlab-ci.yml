stages:
  - lint
  - test
  - deploy
  - sanity-test

lint-flask:
  stage: lint
  image: python:3.10
  before_script:
    - cd server/
    - python --version
    - pip install -r requirements.txt
  script:
    - flake8

lint-react:
  stage: lint
  image: node:18
  before_script:
    - cd web/
    - yarn install
  script:
    - yarn lint

test-flask:
  stage: test
  image: python:3.10
  before_script:
    - cd server/
    - python --version
    - pip install -r requirements.txt
  script:
    - python3 -m unittest tests/test_endpoints.py -v

test-react:
  stage: test
  image: node:18
  before_script:
    - cd web/
    - yarn install
  script:
    - yarn test

deploy-server:
  stage: deploy
  image: alpine:latest
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan advisorlink.ml >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh team106@advisorlink.ml "cd git/f22_cis3760_team106online && git fetch && git checkout $CI_COMMIT_BRANCH && git reset --hard origin/$CI_COMMIT_BRANCH && sudo make production"
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

restart-database:
  stage: deploy
  image: alpine:latest
  when: manual
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan advisorlink.ml >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh team106@advisorlink.ml "cd git/f22_cis3760_team106online && sudo make db"
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
